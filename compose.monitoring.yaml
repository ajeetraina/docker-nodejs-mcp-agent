# compose.monitoring.yaml - Enhanced MCP Agent with comprehensive monitoring
version: '3.8'

services:
  # Main application with enhanced monitoring
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
      - "3001:3001"  # WebSocket monitoring port
    environment:
      - PORT=3000
      - MCP_GATEWAY_URL=http://mcp-gateway:8811
      - NODE_ENV=development
      - MONITORING_ENABLED=true
      - LOG_LEVEL=debug
    depends_on:
      - mcp-gateway
      - monitoring-db
    volumes:
      - ./public/dashboard.html:/app/public/dashboard.html
      - ./logs:/app/logs
    labels:
      - "monitoring.enabled=true"
      - "monitoring.type=mcp-agent"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    models:
      gemma:
        endpoint_var: MODEL_RUNNER_URL
        model_var: MODEL_RUNNER_MODEL

  # MCP Gateway with monitoring
  mcp-gateway:
    image: docker/mcp-gateway:latest
    use_api_socket: true
    ports:
      - "8811:8811"
      - "8812:8812"  # Monitoring port
    environment:
      - GATEWAY_LOG_LEVEL=debug
      - MONITORING_ENABLED=true
    command:
      - --transport=sse
      - --servers=duckduckgo
      - --tools=search,fetch_content
      - --monitoring-port=8812
    volumes:
      - ./gateway-logs:/var/log/mcp-gateway
    labels:
      - "monitoring.enabled=true"
      - "monitoring.type=mcp-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8811/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring database (Redis for metrics storage)
  monitoring-db:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - monitoring_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    labels:
      - "monitoring.enabled=true"
      - "monitoring.type=database"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring Dashboard (Standalone)
  monitoring-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.monitoring
    ports:
      - "3002:3000"
    environment:
      - MCP_AGENT_URL=http://app:3000
      - REDIS_URL=redis://monitoring-db:6379
      - REFRESH_INTERVAL=2000
    depends_on:
      - app
      - monitoring-db
    volumes:
      - ./monitoring-config.json:/app/config.json
    labels:
      - "monitoring.enabled=true"
      - "monitoring.type=dashboard"

  # Health Checker Service
  health-checker:
    build:
      context: .
      dockerfile: Dockerfile.healthcheck
    environment:
      - CHECK_INTERVAL=30
      - SERVICES=app:3000,mcp-gateway:8811,monitoring-dashboard:3000
      - NOTIFICATION_WEBHOOK=${NOTIFICATION_WEBHOOK:-}
    depends_on:
      - app
      - mcp-gateway
    restart: unless-stopped
    labels:
      - "monitoring.enabled=true"
      - "monitoring.type=healthcheck"

# Model configuration with monitoring
models:
  gemma:
    model: ai/gemma3-qat
    monitoring:
      enabled: true
      metrics_interval: 30
      log_level: info

# Volumes for persistent data
volumes:
  monitoring_data:
    driver: local
    labels:
      - "backup.enabled=true"
  
  logs_data:
    driver: local
    labels:
      - "backup.enabled=true"

# Networks for service isolation
networks:
  default:
    name: mcp-agent-network
    labels:
      - "monitoring.network=true"
  
  monitoring:
    name: mcp-monitoring-network
    internal: true
    labels:
      - "monitoring.network=true"